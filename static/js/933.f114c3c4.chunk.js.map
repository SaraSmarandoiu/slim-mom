{"version":3,"file":"static/js/933.f114c3c4.chunk.js","mappings":"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","sources":["components/RegisterPage/RegisterPage.styled.js","pages/RegisterPage.jsx"],"sourcesContent":["\r\nimport styled from 'styled-components';\r\n\r\nimport leaves from '../../images/hero/desktop/leaves.png';\r\nimport banana from '../../images/hero/desktop/banana.png';\r\nimport Strawberry from '../../images/hero/desktop/Strawberry.png';\r\nimport Vector from '../../images/hero/desktop/Vector.png';\r\nimport leavesRetina from '../../images/hero/desktop/leaves@2x.png';\r\nimport bananaRetina from '../../images/hero/desktop/banana@2x.png';\r\nimport StrawberryRetina from '../../images/hero/desktop/Strawberry@2x.png';\r\nimport VectorRetina from '../../images/hero/desktop/Vector@2x.png';\r\n\r\nimport bananaTablet from '../../images/hero/tablet/banana.png';\r\nimport bananaTabletRetina from '../../images/hero/tablet/banana@2x.png';\r\nimport StrawberryTablet from '../../images/hero/tablet/Strawberry.png';\r\nimport StrawberryTabletRetina from '../../images/hero/tablet/Strawberry@2x.png';\r\nimport leavesTablet from '../../images/login/leaves.png';\r\nimport leavesTabletRetina from '../../images/login/leaves@2x.png';\r\nimport VectorTablet from '../../images/hero/tablet/Vector.png';\r\nimport VectorTabletRetina from '../../images/hero/tablet/Vector@2x.png';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  padding-bottom: 100px;\r\n  @media (min-width: 426px) and (max-width: 1023px) {\r\n    padding: 160px 32px 419px;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    margin: 0 auto;\r\n    width: 1280px;\r\n    padding: 306px 16px 179px;\r\n  }\r\n`;\r\nexport const ButtonWrapper = styled.div`\r\n  margin-top: 60px;\r\n  display: grid;\r\n  gap: 32px;\r\n  justify-content: center;\r\n  @media (min-width: 426px) {\r\n    display: flex;\r\n    gap: 32px;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\nexport const H2 = styled.h2`\r\n  font-family: 'VerdanaBold, sans-serif';\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 1.2;\r\n\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n\r\n  color: #FC842D;\r\n  margin-bottom: 60px;\r\n  margin-top: 40px;\r\n  text-align: center;\r\n  @media (min-width: 426px) {\r\n    text-align: left;\r\n  }\r\n`;\r\nexport const RegisterButton = styled.button`\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n  width: 182px;\r\n  height: 44px;\r\n\r\n  color: #ffffff;\r\n  background-color: #fc842d;\r\n  border-radius: 30px;\r\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\r\n  border: none;\r\n  font-family: 'VerdanaBold, sans-serif';\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n`;\r\n\r\nexport const LoginButton = styled.button`\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n  width: 182px;\r\n  height: 44px;\r\n\r\n  color: #fc842d;\r\n  background-color: #ffffff;\r\n  border-radius: 30px;\r\n  border: 2px solid #fc842d;\r\n  font-family: 'VerdanaBold, sans-serif';\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n`;\r\nexport const WrapperWithFruits = styled.div`\r\n  @media (min-width: 426px) and (max-width: 1023px) {\r\n    background-image: url(${StrawberryTablet}), url(${leavesTablet}),\r\n      url(${bananaTablet}), url(${VectorTablet});\r\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\r\n    background-position: bottom 200px right -80px, top -97px left 0px,\r\n      bottom 0px right 0px, bottom 0px right 0px;\r\n    background-size: 391px 384px, 740px 842px, auto, auto;\r\n\r\n    @media (min-resolution: 2dppx) {\r\n      background-image: url(${leavesTabletRetina}),\r\n        url(${StrawberryTabletRetina}), url(${bananaTabletRetina}),\r\n        url(${VectorTabletRetina});\r\n      background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\r\n      background-position: bottom 97px left 0px, bottom 279px right -60px,\r\n        bottom 0px right 0px, bottom 0px right 0px;\r\n      background-size: 531px 553px, 291px 284px, 491px 431px, 494px 563px;\r\n    }\r\n  }\r\n  @media (min-width: 1024px) {\r\n    background-image: url(${leaves}), url(${Strawberry}), url(${banana}),\r\n      url(${Vector});\r\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\r\n    background-position: top 0px right 195px, top 506px right 30px,\r\n      top 0px right 0px, bottom 0px right 0px;\r\n    background-size: auto, auto, auto, 602px 816px;\r\n    @media (min-resolution: 2dppx) {\r\n      background-image: url(${leavesRetina}), url(${StrawberryRetina}),\r\n        url(${bananaRetina}), url(${VectorRetina});\r\n      background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\r\n      background-position: top 0px right 195px, top 526px right 50px,\r\n        top 0px right 0px, bottom 0px right 0px;\r\n      background-size: 746px 846px, 286px 279px, 498px 450px, 602px 816px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Formik, ErrorMessage, Form } from 'formik';\r\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\r\n\r\nimport * as yup from 'yup';\r\nimport { Error, Input, List } from '../components/Form/Form.styled';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useLogInUserMutation, useRegisterUserMutation } from '../redux/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCredentials, setUser } from '../redux/authSlice';\r\nimport {\r\n  ButtonWrapper,\r\n  H2,\r\n  Wrapper,\r\n} from '../components/RegisterPage/RegisterPage.styled';\r\nimport { WrapperWithFruits } from '../components/RegisterPage/RegisterPage.styled';\r\nimport { Loader } from '../components/Loader/Loader';\r\nimport { LoginButton } from '../components/RegisterPage/RegisterPage.styled';\r\nimport { RegisterButton } from '../components/RegisterPage/RegisterPage.styled';\r\nimport { routes } from '../components/Routes/routes';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .min(4, 'Name must be more than or equal to 4 letters')\r\n    .max(50, 'Name must be less than or equal to 50 letters')\r\n    .required('Name is required field'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Password must be more than or equal to 6 letters')\r\n    .max(16, 'Password must be less than or equal to 16 letters')\r\n    .required('Password is required field'),\r\n  email: yup\r\n    .string()\r\n    .email('Invalid email')\r\n    .typeError('Email must be an email')\r\n    .required('Email is required field'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst RegisterPage = () => {\r\n  \r\n  const location = useLocation();\r\n  const userDataForRegister = location.state?.userDataForRegister;\r\n  localStorage.setItem('params', JSON.stringify(userDataForRegister));\r\n\r\n  const navigate = useNavigate();\r\n  const [registerUser, { status }] = useRegisterUserMutation();\r\n  const dispatch = useDispatch();\r\n  const [loginUser] = useLogInUserMutation();\r\n  const [isShowPassword, setIsShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    const userDataForRegisterAll = { ...values, ...userDataForRegister };\r\n    const user = await registerUser(userDataForRegisterAll).unwrap();\r\n    const loginValues = { ...values };\r\n    delete loginValues.name;\r\n    const userLogin = await loginUser(loginValues).unwrap();\r\n    dispatch(setCredentials(user));\r\n    dispatch(setUser(userLogin));\r\n    navigate(routes.diary);\r\n    resetForm();\r\n  };\r\n  const handleClick = () => {\r\n    navigate(routes.login);\r\n  };\r\n  const handleShowPassword = () => {\r\n    setIsShowPassword(!isShowPassword);\r\n  };\r\n\r\n  return (\r\n    <WrapperWithFruits>\r\n      {status === 'pending' && <Loader />}\r\n      <Wrapper>\r\n        <H2>Register</H2>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={schema}\r\n        >\r\n          <Form>\r\n            <List style={{ display: 'grid', gridTemplateColumns: 'revert' }}>\r\n              <li>\r\n                <label>\r\n                  <Input type=\"name\" name=\"name\" placeholder=\"Name *\" />\r\n                  <ErrorMessage name=\"name\" component={Error} />\r\n                </label>\r\n              </li>\r\n\r\n              <li>\r\n                <label>\r\n                  <Input type=\"email\" name=\"email\" placeholder=\"Email *\" />\r\n                  <ErrorMessage name=\"email\" component={Error} />\r\n                </label>\r\n              </li>\r\n\r\n              <li>\r\n                <label style={{ position: 'relative' }}>\r\n                  <Input\r\n                    type={isShowPassword ? 'text' : 'password'}\r\n                    name=\"password\"\r\n                    placeholder=\"Password *\"\r\n                    maxLength=\"16\"\r\n                  />\r\n                  {isShowPassword ? (\r\n                    <AiFillEyeInvisible\r\n                      onClick={handleShowPassword}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        left: '250px',\r\n                        color: '#FC842D',\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <AiFillEye\r\n                      onClick={handleShowPassword}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        left: '250px',\r\n                        color: '#FC842D',\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <ErrorMessage name=\"password\" component={Error} />\r\n                </label>\r\n              </li>\r\n            </List>\r\n            <ButtonWrapper>\r\n              <RegisterButton type=\"submit\" full={true} style={{ width: '200px' }}>\r\n                Register\r\n              </RegisterButton>\r\n              <div onClick={handleClick}>\r\n                <LoginButton type=\"button\" full={false}>\r\n                  Log In\r\n                </LoginButton>\r\n              </div>\r\n            </ButtonWrapper>\r\n          </Form>\r\n        </Formik>\r\n      </Wrapper>\r\n    </WrapperWithFruits>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;"],"names":["Wrapper","styled","div","ButtonWrapper","H2","h2","RegisterButton","button","LoginButton","WrapperWithFruits","StrawberryTablet","leavesTablet","bananaTablet","VectorTablet","leavesTabletRetina","StrawberryTabletRetina","bananaTabletRetina","VectorTabletRetina","leaves","Strawberry","banana","Vector","leavesRetina","StrawberryRetina","bananaRetina","VectorRetina","schema","yup","shape","name","min","max","required","password","email","typeError","initialValues","RegisterPage","_location$state","userDataForRegister","useLocation","state","localStorage","setItem","JSON","stringify","navigate","useNavigate","registerUser","status","useRegisterUserMutation","dispatch","useDispatch","loginUser","useLogInUserMutation","isShowPassword","setIsShowPassword","useState","handleShowPassword","_jsxs","children","_jsx","Loader","Formik","onSubmit","async","values","_ref","resetForm","userDataForRegisterAll","user","unwrap","loginValues","userLogin","setCredentials","setUser","routes","diary","validationSchema","Form","List","style","display","gridTemplateColumns","Input","type","placeholder","ErrorMessage","component","Error","position","maxLength","AiFillEyeInvisible","onClick","top","left","color","AiFillEye","full","width","handleClick","login"],"sourceRoot":""}